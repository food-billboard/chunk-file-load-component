(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[14],{"9kvl":function(e,n,t){"use strict";var a=t("FfOG");t.d(n,"a",(function(){return a["b"]}));t("bCY9")},F4QJ:function(e,n,t){"use strict";function a(){var e=o(t("q1tI"));return a=function(){return e},e}function r(){var e=t("dEAq");return r=function(){return e},e}function o(e){return e&&e.__esModule?e:{default:e}}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Object.defineProperty(n,"__esModule",{value:!0}),n["default"]=void 0;var c=function(e,n){var t=[],o=e.match.params.uuid,l=void 0===e.location.query.wrapper,i=n[o];if(i){var c=s(s({},i.previewerProps),{},{hideActions:(i.previewerProps.hideActions||[]).concat(["EXTERNAL"])});void 0!==e.location.query.capture&&(c.motions=(c.motions||[]).slice(),c.motions.unshift("autoplay"),c.motions.every((function(e){return!e.startsWith("capture")}))&&c.motions.push("capture:[id|=root]")),t=l?[a()["default"].createElement((function(){return(0,r().useMotions)(c.motions||[],"undefined"!==typeof window?document.documentElement:null),a()["default"].createElement("div",{},a()["default"].createElement(i.component))}))]:[c,a()["default"].createElement(i.component)]}return t};n["default"]=c},Rsk4:function(e,n,t){"use strict";t.r(n);var a=t("9og8"),r=t("WmNS"),o=t.n(r),l=t("LtsZ");n["default"]={"Upload-demo":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u,d,m,p,f;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return d=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=u(n);if(t&&t.has(e))return t.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var l=r?Object.getOwnPropertyDescriptor(e,o):null;l&&(l.get||l.set)?Object.defineProperty(a,o,l):a[o]=e[o]}return a["default"]=e,t&&t.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:n})(e)},n=t("K+nK"),e.t0=n,e.next=6,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.next=10,t.e(10).then(t.t.bind(null,"7kJ1",7));case 10:return e.t2=n,e.next=13,Promise.all([t.e(0),t.e(1),t.e(3),t.e(9)]).then(t.t.bind(null,"qPIi",7));case 13:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=18,Promise.resolve().then(t.bind(null,"9og8"));case 18:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.t6=n,e.next=23,t.e(6).then(t.bind(null,"tJVT"));case 23:return e.t7=e.sent,s=(0,e.t6)(e.t7),e.t8=d,e.next=28,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 28:return e.t9=e.sent,i=(0,e.t8)(e.t9),e.next=32,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 32:return c=e.sent,e.next=35,Promise.all([t.e(0),t.e(1),t.e(5),t.e(2),t.e(8)]).then(t.bind(null,"gdfu"));case 35:return e.sent,m={},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},f=function(){var e=(0,i.useState)("list"),n=(0,s["default"])(e,2),t=n[0],o=n[1],u=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("exitDataFn",n),m[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),d=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("uploadFn",n,t),r=m[t].size,m[t].index++,o=m[t].index*m[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),f=function(){var e=(0,l["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:console.log("completeFn",n),m[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),h=function(e){var n=e.target.value;o(n)};return i["default"].createElement(i["default"].Fragment,null,i["default"].createElement(r["default"].Group,{value:t,onChange:h},i["default"].createElement(r["default"],{key:"list",value:"list"},"\u5217\u8868"),i["default"].createElement(r["default"],{key:"card",value:"card"},"\u5361\u7247")),i["default"].createElement(c.Upload,{immediately:!1,onRemove:p.bind(null,1e3),viewType:t,request:{exitDataFn:u,uploadFn:d,completeFn:f,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",f);case 40:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { Upload } from 'chunk-file-load-component';\nimport { Radio } from 'antd';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const [viewType, setViewType] = useState('list');\n\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const onRadioChange = (e) => {\n    const value = e.target.value;\n    setViewType(value);\n  };\n\n  return (\n    <>\n      <Radio.Group value={viewType} onChange={onRadioChange}>\n        <Radio key=\"list\" value=\"list\">\n          \u5217\u8868\n        </Radio>\n        <Radio key=\"card\" value=\"card\">\n          \u5361\u7247\n        </Radio>\n      </Radio.Group>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType={viewType}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{antd:{version:"4.16.13",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"chunk-file-load-component":{version:"1.0.0"},"react-dom":{version:">=16.9.0"}},componentName:"Upload",identifier:"Upload-demo"}},"Upload-demo-1":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]?i[t].error=!1:i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0,error:!0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:if(!i[t].error){e.next=4;break}return e.abrupt("return",{data:-1});case 4:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 9:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement(s.Upload,{onRemove:c.bind(null,1e3),viewType:"list",immediately:!1,request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    if (!mockCache[name]) {\n      mockCache[name] = {\n        max: params.chunksLength,\n        chunkSize: params.chunkSize,\n        size: params.size,\n        index: 0,\n        error: true,\n      };\n    } else {\n      mockCache[name].error = false;\n    }\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    if (mockCache[name].error) {\n      return {\n        data: -1,\n      };\n    }\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  return (\n    <>\n      <Upload\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        immediately={false}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-1"}},"Upload-demo-2":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u,d,m,p;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return u=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c(n);if(t&&t.has(e))return t.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var l=r?Object.getOwnPropertyDescriptor(e,o):null;l&&(l.get||l.set)?Object.defineProperty(a,o,l):a[o]=e[o]}return a["default"]=e,t&&t.set(e,a),a},c=function(e){if("function"!==typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(c=function(e){return e?t:n})(e)},n=t("K+nK"),e.t0=n,e.next=6,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=11,Promise.resolve().then(t.bind(null,"9og8"));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=16,t.e(6).then(t.bind(null,"tJVT"));case 16:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.t6=u,e.next=21,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 21:return e.t7=e.sent,s=(0,e.t6)(e.t7),e.next=25,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 25:return i=e.sent,d={},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},p=function(){var e=(0,s.useState)([]),n=(0,l["default"])(e,2),t=n[0],o=n[1],c=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,m();case 2:return console.log("exitDataFn",n),d[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),u=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,m();case 2:return console.log("uploadFn",n,t),r=d[t].size,d[t].index++,o=d[t].index*d[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),p=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,m();case 2:console.log("completeFn",n),d[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),f=function(e){o(e),console.log("upload value changed",e)};return s["default"].createElement(s["default"].Fragment,null,s["default"].createElement(i.Upload,{immediately:!1,onRemove:m.bind(null,1e3),viewType:"list",value:t,onChange:f,request:{exitDataFn:c,uploadFn:u,completeFn:p,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",p);case 30:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const [uploadValue, setUploadValue] = useState([]);\n\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const onChange = (value) => {\n    setUploadValue(value);\n    console.log('upload value changed', value);\n  };\n\n  return (\n    <>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        value={uploadValue}\n        onChange={onChange}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-2"}},"Upload-demo-3":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o=function(e){e.isDragAccept,e.isDragActive,e.isDragReject,e.isFocused,e.isFileDialogActive,e.isLimit,e.locale;return l["default"].createElement("button",null,"\u70b9\u51fb\u4e0a\u4f20")};return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement(s.Upload,{containerRender:o,immediately:!1,onRemove:c.bind(null,1e3),viewType:"list",request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const containerRender = ({\n    isDragAccept,\n    isDragActive,\n    isDragReject,\n    isFocused,\n    isFileDialogActive,\n    isLimit,\n    locale,\n  }) => {\n    return <button>\u70b9\u51fb\u4e0a\u4f20</button>;\n  };\n\n  return (\n    <>\n      <Upload\n        containerRender={containerRender}\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-3"}},"Upload-demo-4":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o=function(e,n,t,a,r){a.preview;var o=a.upload,s=a.cancel,i=(a.stop,r.complete),c=r.status,u=r.total,d=n.task.file.name;return l["default"].createElement("div",null,d,"- \u8fdb\u5ea6: ",i/u*100||0,"- \u72b6\u6001: ",c,"-",l["default"].createElement("span",{onClick:o},"\u4e0a\u4f20"),"-",l["default"].createElement("span",{onClick:s},"\u53d6\u6d88"))};return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement(s.Upload,{itemRender:o,immediately:!1,onRemove:c.bind(null,1e3),viewType:"list",request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const itemRender = (\n    originNode,\n    file,\n    fileList,\n    { preview, upload, cancel, stop },\n    { complete, status, total },\n  ) => {\n    const fileName = file.task.file.name;\n    return (\n      <div>\n        {fileName}- \u8fdb\u5ea6: {(complete / total) * 100 || 0}- \u72b6\u6001: {status}-\n        <span onClick={upload}>\u4e0a\u4f20</span>-<span onClick={cancel}>\u53d6\u6d88</span>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Upload\n        itemRender={itemRender}\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-4"}},"Upload-demo-5":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u,d,m,p,f;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return d=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=u(n);if(t&&t.has(e))return t.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var l=r?Object.getOwnPropertyDescriptor(e,o):null;l&&(l.get||l.set)?Object.defineProperty(a,o,l):a[o]=e[o]}return a["default"]=e,t&&t.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:n})(e)},n=t("K+nK"),e.t0=n,e.next=6,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.next=10,t.e(19).then(t.t.bind(null,"fwXI",7));case 10:return e.t2=n,e.next=13,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(18)]).then(t.t.bind(null,"CC+v",7));case 13:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=18,Promise.resolve().then(t.bind(null,"9og8"));case 18:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.t6=n,e.next=23,t.e(6).then(t.bind(null,"tJVT"));case 23:return e.t7=e.sent,s=(0,e.t6)(e.t7),e.t8=d,e.next=28,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 28:return e.t9=e.sent,i=(0,e.t8)(e.t9),e.next=32,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 32:return c=e.sent,e.next=35,Promise.all([t.e(0),t.e(1),t.e(5),t.e(2),t.e(8)]).then(t.bind(null,"gdfu"));case 35:return e.sent,m={},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},f=function(){var e=(0,i.useState)(!1),n=(0,s["default"])(e,2),t=n[0],o=n[1],u=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("exitDataFn",n),m[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),d=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("uploadFn",n,t),r=m[t].size,m[t].index++,o=m[t].index*m[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),f=function(){var e=(0,l["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:console.log("completeFn",n),m[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();function h(e){return console.log("wrapperFile",e),i["default"].createElement(r["default"],{footer:null,closable:!0,onCancel:o.bind(null,!1),visible:t},"\u81ea\u5b9a\u4e49\u9884\u89c8")}var v=function(){return o(!0),!0};return i["default"].createElement(i["default"].Fragment,null,i["default"].createElement(c.Upload,{previewFile:h,onPreviewFile:v,immediately:!1,onRemove:p.bind(null,1e3),viewType:"list",request:{exitDataFn:u,uploadFn:d,completeFn:f,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",f);case 40:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { Upload } from 'chunk-file-load-component';\nimport { Modal } from 'antd';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  function previewFile(file) {\n    console.log('wrapperFile', file);\n    return (\n      <Modal\n        footer={null}\n        closable\n        onCancel={setPreviewVisible.bind(null, false)}\n        visible={previewVisible}\n      >\n        \u81ea\u5b9a\u4e49\u9884\u89c8\n      </Modal>\n    );\n  }\n\n  const onPreview = () => {\n    setPreviewVisible(true);\n    return true;\n  };\n\n  return (\n    <>\n      <Upload\n        previewFile={previewFile}\n        onPreviewFile={onPreview}\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{antd:{version:"4.16.13",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"chunk-file-load-component":{version:"1.0.0"},"react-dom":{version:">=16.9.0"}},componentName:"Upload",identifier:"Upload-demo-5"}},"Upload-demo-6":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o=function(e){var n=e.type;return n.startsWith("image/")?null:{message:"file-invalid-type",code:"file-invalid-type"}},u=function(e,n){e.length&&console.error("there file is error"),console.log("errorFiles: ",e,"fulFiles: ",n)};return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement(s.Upload,{immediately:!1,onValidator:u,onRemove:c.bind(null,1e3),validator:o,viewType:"list",request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const validator = (file: File) => {\n    const type = file.type;\n    if (type.startsWith('image/')) return null;\n    return {\n      message: 'file-invalid-type',\n      code: 'file-invalid-type',\n    };\n  };\n\n  const onValidator = (errorFiles: File[], fulFiles: File[]) => {\n    if (errorFiles.length) {\n      console.error('there file is error');\n    }\n    console.log('errorFiles: ', errorFiles, 'fulFiles: ', fulFiles);\n  };\n\n  return (\n    <>\n      <Upload\n        immediately={false}\n        onValidator={onValidator}\n        onRemove={sleep.bind(null, 1000)}\n        validator={validator}\n        viewType=\"list\"\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-6"}},"Upload-demo-7":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o=function(e,n,t){console.log(e,n);var a=e.originFile.type;return a.startsWith("image/")?l["default"].createElement("span",null,"\u81ea\u5b9a\u4e49\u56fe\u6807"):t};return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement(s.Upload,{immediately:!1,onRemove:c.bind(null,1e3),iconRender:o,viewType:"list",request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const iconRender = (file, viewType, originNode) => {\n    console.log(file, viewType);\n    const type = file.originFile.type;\n    if (type.startsWith('image/')) {\n      return <span>\u81ea\u5b9a\u4e49\u56fe\u6807</span>;\n    }\n    return originNode;\n  };\n\n  return (\n    <>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        iconRender={iconRender}\n        viewType=\"list\"\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-7"}},"Upload-demo-8":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u,d,m,p,f;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return d=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=u(n);if(t&&t.has(e))return t.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var l=r?Object.getOwnPropertyDescriptor(e,o):null;l&&(l.get||l.set)?Object.defineProperty(a,o,l):a[o]=e[o]}return a["default"]=e,t&&t.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:n})(e)},n=t("K+nK"),e.t0=n,e.next=6,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.next=10,t.e(10).then(t.t.bind(null,"7kJ1",7));case 10:return e.t2=n,e.next=13,Promise.all([t.e(0),t.e(1),t.e(3),t.e(9)]).then(t.t.bind(null,"qPIi",7));case 13:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=18,Promise.resolve().then(t.bind(null,"9og8"));case 18:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.t6=n,e.next=23,t.e(6).then(t.bind(null,"tJVT"));case 23:return e.t7=e.sent,s=(0,e.t6)(e.t7),e.t8=d,e.next=28,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 28:return e.t9=e.sent,i=(0,e.t8)(e.t9),e.next=32,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 32:return c=e.sent,e.next=35,Promise.all([t.e(0),t.e(1),t.e(5),t.e(2),t.e(8)]).then(t.bind(null,"gdfu"));case 35:return e.sent,m={},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},f=function(){var e=(0,i.useState)("true"),n=(0,s["default"])(e,2),t=n[0],o=n[1],u=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("exitDataFn",n),m[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),d=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("uploadFn",n,t),r=m[t].size,m[t].index++,o=m[t].index*m[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),f=function(){var e=(0,l["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:console.log("completeFn",n),m[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),h=function(e){var n=e.target.value;o(n)},v=function(){switch(t){case"true":return{showRemoveIcon:!0};case"false":return{showRemoveIcon:!1};case"custom":return{removeIcon:function(){return i["default"].createElement("span",null,"delete")}}}};return i["default"].createElement(i["default"].Fragment,null,i["default"].createElement(r["default"].Group,{value:t,onChange:h},i["default"].createElement(r["default"],{key:"true",value:"true"},"\u663e\u793a\u9ed8\u8ba4\u5220\u9664\u56fe\u6807"),i["default"].createElement(r["default"],{key:"false",value:"false"},"\u4e0d\u663e\u793a\u5220\u9664\u56fe\u6807"),i["default"].createElement(r["default"],{key:"custom",value:"custom"},"\u81ea\u5b9a\u4e49\u5220\u9664\u56fe\u6807")),i["default"].createElement(c.Upload,{immediately:!1,onRemove:p.bind(null,1e3),viewType:"list",showUploadList:v(),request:{exitDataFn:u,uploadFn:d,completeFn:f,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",f);case 40:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { Upload } from 'chunk-file-load-component';\nimport { Radio } from 'antd';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const [removeIcon, setRemoveIcon] = useState('true');\n\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const onRadioChange = (e) => {\n    const value = e.target.value;\n    setRemoveIcon(value);\n  };\n\n  const showUploadList = () => {\n    switch (removeIcon) {\n      case 'true':\n        return { showRemoveIcon: true };\n      case 'false':\n        return { showRemoveIcon: false };\n      case 'custom':\n        return {\n          removeIcon: () => <span>delete</span>,\n        };\n    }\n  };\n\n  return (\n    <>\n      <Radio.Group value={removeIcon} onChange={onRadioChange}>\n        <Radio key=\"true\" value=\"true\">\n          \u663e\u793a\u9ed8\u8ba4\u5220\u9664\u56fe\u6807\n        </Radio>\n        <Radio key=\"false\" value=\"false\">\n          \u4e0d\u663e\u793a\u5220\u9664\u56fe\u6807\n        </Radio>\n        <Radio key=\"custom\" value=\"custom\">\n          \u81ea\u5b9a\u4e49\u5220\u9664\u56fe\u6807\n        </Radio>\n      </Radio.Group>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        showUploadList={showUploadList()}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{antd:{version:"4.16.13",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"chunk-file-load-component":{version:"1.0.0"},"react-dom":{version:">=16.9.0"}},componentName:"Upload",identifier:"Upload-demo-8"}},"Upload-demo-9":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o=function(e,n){e.length&&console.error("there file is error"),console.log("errorFiles: ",e,"fulFiles: ",n)};return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement("h3",null,"\u9650\u5236\u4e0a\u4f20\u572810-100"),l["default"].createElement(s.Upload,{immediately:!1,onValidator:o,onRemove:c.bind(null,1e3),viewType:"list",minSize:10,maxSize:100,request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const onValidator = (errorFiles: File[], fulFiles: File[]) => {\n    if (errorFiles.length) {\n      console.error('there file is error');\n    }\n    console.log('errorFiles: ', errorFiles, 'fulFiles: ', fulFiles);\n  };\n\n  return (\n    <>\n      <h3>\u9650\u5236\u4e0a\u4f20\u572810-100</h3>\n      <Upload\n        immediately={false}\n        onValidator={onValidator}\n        onRemove={sleep.bind(null, 1000)}\n        viewType=\"list\"\n        minSize={10}\n        maxSize={100}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-9"}},"Upload-demo-10":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u,d,m,p,f;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return d=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=u(n);if(t&&t.has(e))return t.get(e);var a={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var l=r?Object.getOwnPropertyDescriptor(e,o):null;l&&(l.get||l.set)?Object.defineProperty(a,o,l):a[o]=e[o]}return a["default"]=e,t&&t.set(e,a),a},u=function(e){if("function"!==typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:n})(e)},n=t("K+nK"),e.t0=n,e.next=6,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 6:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.next=10,t.e(10).then(t.t.bind(null,"7kJ1",7));case 10:return e.t2=n,e.next=13,Promise.all([t.e(0),t.e(1),t.e(3),t.e(9)]).then(t.t.bind(null,"qPIi",7));case 13:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=18,Promise.resolve().then(t.bind(null,"9og8"));case 18:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.t6=n,e.next=23,t.e(6).then(t.bind(null,"tJVT"));case 23:return e.t7=e.sent,s=(0,e.t6)(e.t7),e.t8=d,e.next=28,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 28:return e.t9=e.sent,i=(0,e.t8)(e.t9),e.next=32,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 32:return c=e.sent,e.next=35,Promise.all([t.e(0),t.e(1),t.e(5),t.e(2),t.e(8)]).then(t.bind(null,"gdfu"));case 35:return e.sent,m={},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},f=function(){var e=(0,i.useState)("list"),n=(0,s["default"])(e,2),t=n[0],o=n[1],u=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("exitDataFn",n),m[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),d=function(){var e=(0,l["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return console.log("uploadFn",n,t),r=m[t].size,m[t].index++,o=m[t].index*m[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),f=function(){var e=(0,l["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:console.log("completeFn",n),m[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),h=function(e){var n=e.target.value;o(n)};return i["default"].createElement(i["default"].Fragment,null,i["default"].createElement(r["default"].Group,{value:t,onChange:h},i["default"].createElement(r["default"],{key:"list",value:"list"},"\u5217\u8868"),i["default"].createElement(r["default"],{key:"card",value:"card"},"\u5361\u7247")),i["default"].createElement(c.Upload,{immediately:!1,onRemove:p.bind(null,1e3),viewType:t,locale:{container:"\u81ea\u5b9a\u4e49\u5bb9\u5668\u6587\u6848",progress:{pending:"\u961f\u5217",waiting:"\u7b49\u5f85",reading:"\u89e3\u6790",uploading:"\u4e0a\u4f20",fulfilled:"\u5b8c\u6210",rejected:"\u5931\u8d25",cancel:"\u53d6\u6d88",stopping:"\u6682\u505c"}},request:{exitDataFn:u,uploadFn:d,completeFn:f,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",f);case 40:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { Upload } from 'chunk-file-load-component';\nimport { Radio } from 'antd';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const [viewType, setViewType] = useState('list');\n\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  const onRadioChange = (e) => {\n    const value = e.target.value;\n    setViewType(value);\n  };\n\n  return (\n    <>\n      <Radio.Group value={viewType} onChange={onRadioChange}>\n        <Radio key=\"list\" value=\"list\">\n          \u5217\u8868\n        </Radio>\n        <Radio key=\"card\" value=\"card\">\n          \u5361\u7247\n        </Radio>\n      </Radio.Group>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType={viewType}\n        locale={{\n          container: '\u81ea\u5b9a\u4e49\u5bb9\u5668\u6587\u6848',\n          progress: {\n            pending: '\u961f\u5217',\n            waiting: '\u7b49\u5f85',\n            reading: '\u89e3\u6790',\n            uploading: '\u4e0a\u4f20',\n            fulfilled: '\u5b8c\u6210',\n            rejected: '\u5931\u8d25',\n            cancel: '\u53d6\u6d88',\n            stopping: '\u6682\u505c',\n          },\n        }}\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{antd:{version:"4.16.13",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"chunk-file-load-component":{version:"1.0.0"},"react-dom":{version:">=16.9.0"}},componentName:"Upload",identifier:"Upload-demo-10"}},"Upload-demo-11":{component:Object(l["dynamic"])({loader:function(){var e=Object(a["default"])(o.a.mark((function e(){var n,a,r,l,s,i,c,u;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"WmNS",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.bind(null,"9og8"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=14,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 14:return e.t5=e.sent,l=(0,e.t4)(e.t5),e.next=18,Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(4)]).then(t.bind(null,"/7QA"));case 18:return s=e.sent,i={},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise((function(n){return setTimeout(n,e)}))},u=function(){var e=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("exitDataFn",n),i[t]={max:n.chunksLength,chunkSize:n.chunkSize,size:n.size,index:0},e.abrupt("return",{data:0});case 5:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),n=function(){var e=(0,r["default"])(a["default"].mark((function e(n,t){var r,o;return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:return console.log("uploadFn",n,t),r=i[t].size,i[t].index++,o=i[t].index*i[t].chunkSize,e.abrupt("return",{data:o>=r?r:o});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),t=function(){var e=(0,r["default"])(a["default"].mark((function e(n){return a["default"].wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c();case 2:console.log("completeFn",n),i[n.name]={};case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return l["default"].createElement(l["default"].Fragment,null,l["default"].createElement("h4",null,"\u53ef\u540c\u65f6\u9009\u62e9\u591a\u4e2a\u6587\u4ef6"),l["default"].createElement(s.Upload,{immediately:!1,onRemove:c.bind(null,1e3),viewType:"list",multiple:!0,request:{exitDataFn:e,uploadFn:n,completeFn:t,callback:function(e,n){console.log(e,n),e||console.log("Upload Done!!")}}}))},e.abrupt("return",u);case 23:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { Upload } from 'chunk-file-load-component';\n\n//mock local server\nlet mockCache = {};\n\nconst sleep = (times = 500) =>\n  new Promise((resolve) => setTimeout(resolve, times));\n\nexport default () => {\n  const exitDataFn = async (\n    params: {\n      filename: string;\n      md5: string;\n      suffix: string;\n      size: number;\n      chunkSize: number;\n      chunksLength: number;\n    },\n    name: Symbol,\n  ) => {\n    await sleep();\n    console.log('exitDataFn', params);\n    mockCache[name] = {\n      max: params.chunksLength,\n      chunkSize: params.chunkSize,\n      size: params.size,\n      index: 0,\n    };\n    //Mock server response\n    return {\n      data: 0,\n    };\n  };\n\n  const uploadFn = async (data: FormData, name: Symbol) => {\n    await sleep();\n    console.log('uploadFn', data, name);\n    const size = mockCache[name].size;\n    mockCache[name].index++;\n    const nextOffset = mockCache[name].index * mockCache[name].chunkSize;\n    //Mock server response\n    return {\n      data: nextOffset >= size ? size : nextOffset,\n    };\n  };\n\n  const completeFn = async (data: any) => {\n    await sleep();\n    console.log('completeFn', data);\n    mockCache[data.name] = {};\n  };\n\n  return (\n    <>\n      <h4>\u53ef\u540c\u65f6\u9009\u62e9\u591a\u4e2a\u6587\u4ef6</h4>\n      <Upload\n        immediately={false}\n        onRemove={sleep.bind(null, 1000)}\n        viewType={'list'}\n        multiple\n        request={{\n          exitDataFn,\n          uploadFn,\n          completeFn,\n          callback(err, value) {\n            console.log(err, value);\n            if (!err) {\n              console.log('Upload Done!!');\n            }\n          },\n        }}\n      />\n    </>\n  );\n};"}},dependencies:{react:{version:"16.14.0"},"chunk-file-load-component":{version:"1.0.0"}},componentName:"Upload",identifier:"Upload-demo-11"}}}},x2v5:function(e){e.exports=JSON.parse("{}")}}]);